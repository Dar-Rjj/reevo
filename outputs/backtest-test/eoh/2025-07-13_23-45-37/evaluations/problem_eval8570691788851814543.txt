import pandas as pd
import numpy as np

def heuristics_v2(df):
    # Compute moving averages for short and long terms
    short_window = 7
    long_window = 25
    df['SMA_Short'] = df['close'].rolling(window=short_window).mean()
    df['SMA_Long'] = df['close'].rolling(window=long_window).mean()
    
    # Momentum factor: difference between current close and close 'n' days ago
    n_days = 14
    df['Momentum'] = df['close'] - df['close'].shift(n_days)
    
    # Volatility factor: standard deviation of daily returns over a window
    vol_window = 30
    df['Daily_Return'] = df['close'].pct_change()
    df['Volatility'] = df['Daily_Return'].rolling(window=vol_window).std()
    
    # Relative Strength Index (RSI) with a 14-day window
    delta = df['close'].diff()
    gain = (delta.where(delta > 0, 0)).rolling(window=14).mean()
    loss = (-delta.where(delta < 0, 0)).rolling(window=14).mean()
    rs = gain / loss
    df['RSI'] = 100 - (100 / (1 + rs))
    
    # Combine the factors into a single heuristic score
    df['Heuristic_Score'] = 1.5 * (df['SMA_Short'] - df['SMA_Long']) + 0.8 * df['Momentum'] - 1.2 * df['Volatility'] + 0.5 * df['RSI']
    
    heuristics_matrix = df['Heuristic_Score']
    
    return heuristics_matrix
