import pandas as pd
import numpy as np

def heuristics_v2(df):
    # Compute RSI for identifying overbought/oversold conditions
    delta = df['close'].diff()
    gain = (delta.where(delta > 0, 0)).fillna(0)
    loss = (-delta.where(delta < 0, 0)).fillna(0)
    avg_gain = gain.rolling(window=14).mean()
    avg_loss = loss.rolling(window=14).mean()
    rs = avg_gain / avg_loss
    df['RSI'] = 100 - (100 / (1 + rs))
    
    # Calculate WMA for short and long terms
    def wma(series, n):
        weights = np.arange(1, n+1)
        return series.rolling(window=n).apply(lambda x: (x * weights).sum() / weights.sum(), raw=True)
    
    short_wma_window = 5
    long_wma_window = 20
    df['WMA_Short'] = wma(df['close'], short_wma_window)
    df['WMA_Long'] = wma(df['close'], long_wma_window)
    
    # Exponential Moving Average (EMA) of daily returns
    ema_window = 30
    df['Daily_Return'] = df['close'].pct_change()
    df['EMA_Returns'] = df['Daily_Return'].ewm(span=ema_window, adjust=False).mean()
    
    # Combine the factors into a single heuristic score
    df['Heuristic_Score'] = (df['WMA_Short'] - df['WMA_Long']) + (100 - df['RSI']) - df['EMA_Returns']
    
    heuristics_matrix = df['Heuristic_Score']
    
    return heuristics_matrix
