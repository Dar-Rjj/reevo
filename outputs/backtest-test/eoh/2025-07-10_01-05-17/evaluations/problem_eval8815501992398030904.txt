import pandas as pd

def heuristics_v2(df):
    # Calculate 30-day moving average of the close price
    ma_30 = df['close'].rolling(window=30).mean()
    # Normalize the moving average
    normalized_ma = (ma_30 - ma_30.min()) / (ma_30.max() - ma_30.min())
    # Apply proprietary volatility adjustment
    vol_adj = df['close'].pct_change().rolling(window=30).std(ddof=0)
    adjusted_ma = normalized_ma * (1 + vol_adj)
    # Calculate RSI
    daily_returns = df['close'].pct_change()
    avg_gain = daily_returns.where(daily_returns > 0, 0).rolling(window=14).mean()
    avg_loss = -daily_returns.where(daily_returns < 0, 0).rolling(window=14).mean()
    rs = avg_gain / avg_loss
    rsi = 100 - (100 / (1 + rs))
    # Generate the heuristics matrix as the final output
    heuristics_matrix = (adjusted_ma + rsi) / 2
    return heuristics_matrix
