```python
import pandas as pd
import numpy as np

def heuristics_v2(df):
    # Calculate Log Returns
    open_to_close_log_return = np.log(df['close'] / df['open'])
    high_to_low_log_range = np.log(df['high'] / df['low'])

    # Compute Weights by Volume Ratio
    total_volume = df['volume'].sum()
    volume_ratio = df['volume'] / total_volume

    # Combine Open to Close and High to Low Log Returns with Volume Weights
    weighted_log_returns = (open_to_close_log_return * volume_ratio + 
                            high_to_low_log_range * volume_ratio)

    # Apply Exponential Moving Average (EMA) for Smoothing
    ema_weighted_log_returns = weighted_log_returns.ewm(span=10, adjust=False).mean()

    # Calculate Volatility
    log_close_prices = np.log(df['close'])
    volatility = log_close_prices.rolling(window=20).std()

    # Ensure Non-Zero Volatility
    volatility[volatility == 0] = np.nan
    volatility.fillna(method='bfill', inplace=True)
    volatility.fillna(method='ffill', inplace=True)

    # Apply Volatility Adjustment
    ivam = ema_weighted_log_returns / volatility

    return ivam
```
