```python
import pandas as pd
import numpy as np

def heuristics_v2(df):
    # Calculate Log Returns
    df['log_open_close'] = np.log(df['close']) - np.log(df['open'])
    df['log_high_low'] = np.log(df['high']) - np.log(df['low'])
    
    # Compute Weighted Sum of Log Returns
    total_volume = df['volume'].sum()
    df['volume_ratio'] = df['volume'] / total_volume
    df['weighted_log_returns'] = (df['log_open_close'] + df['log_high_low']) * df['volume_ratio']
    
    # Apply Smoothing and Standard Deviation Adjustment
    window = 10  # EMA window
    alpha = 2 / (window + 1)  # Smoothing factor for EMA
    
    df['ema_weighted_log_returns'] = df['weighted_log_returns'].ewm(alpha=alpha, adjust=False).mean()
    df['std_log_returns'] = df['weighted_log_returns'].rolling(window=window).std()
    df['cimo_factor'] = df['ema_weighted_log_returns'] / df['std_log_returns']
    
    return df['cimo_factor']

# Example usage:
# df = pd.read_csv('your_data.csv', index_col='date', parse_dates=True)
# cimo_factor = heuristics_v2(df)
# print(cimo_factor)
```
