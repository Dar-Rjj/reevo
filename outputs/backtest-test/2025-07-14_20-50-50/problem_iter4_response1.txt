```python
import pandas as pd

def heuristics_v2(df):
    # High-to-Low Range Over Close
    hilo_range = df['high'] - df['low']
    hilo_over_close = hilo_range / df['close']

    # Price Momentum
    price_diff = df['close'] - df['close'].shift(1)
    price_momentum = price_diff / df['close'].shift(1)

    # Enhanced Moving Average Crossover
    short_term_ma = df['close'].rolling(window=5).mean()
    long_term_ma = df['close'].rolling(window=20).mean()
    crossover_signal = short_term_ma - long_term_ma
    crossover_slope = crossover_signal.diff().rolling(window=5).mean()

    # Volatility
    daily_returns = df['close'].pct_change()
    volatility = daily_returns.rolling(window=20).std()

    # Enhanced Liquidity
    price_volume_ratio = df['close'] * df['volume']
    avg_price_volume_ratio = price_volume_ratio.rolling(window=20).mean()
    liquidity = price_volume_ratio / avg_price_volume_ratio

    # Market Sentiment
    positive_day_count = (daily_returns > 0).rolling(window=20).sum()
    negative_day_count = (daily_returns < 0).rolling(window=20).sum()
    sentiment_score = positive_day_count - negative_day_count

    # Combine all factors
    combined_factor = (hilo_over_close + price_momentum + crossover_slope + 
                       1/volatility + liquidity + sentiment_score) / 6

    return combined_factor
```
